########ros -- system -- script########
#-------------Config--------------------------
:local WANInterface "interfaceName"
:local CFzoneid "32charecterZoneID"
:local CFdomain "your.domain.here"
:local CFapitoken "32charecterToken"
:local TTL 1800
:local proxied true
:local commentDateTime true
#-------------Config end-----------------------


### get WANip ###
:local wanIP [/ip address get [find interface=$WANInterface] address]
:set wanIP [:pick $wanIP 0 [:find $wanIP "/"]]
:set wanIP [:toip $wanIP]
#:log info "WAN address: $wanIP"

### Check non proxied DNS record against WAN interface address, if they match, exit ###
:if ($proxied = false) \
do={
    :local resolvedIP [:resolve $CFdomain]
    #:log info "$CFdomain resolved to: $resolvedIP"
    :if ($resolvedIP = $wanIP) \
        do={
        #log info "DNS record matches WAN IP, no action needed"
        return
    }
    log warning "DNS record does NOT match WAN IP"
}


### Get domainID ###
:local getDetails [/tool fetch http-method=get mode=https url="https://api.cloudflare.com/client/v4/zones/$CFzoneid/dns_records?name=$CFdomain&type=A" http-header-field="Authorization: Bearer $CFapitoken,content-type:application/json" as-value output=user];
:global JSONIn ($getDetails->"data");
:global fJParse;
:global fJParsePrintVar;
:global JParseOut [$fJParse];
:local CFdomainid ($JParseOut->"result"->0->"id");
#:log info "Domain ID: $CFdomainid"
:if ($proxied = true) \
do={
    :local resolvedIP ($JParseOut->"result"->0->"content");
    :local CFproxied ($JParseOut->"result"->0->"proxied");
    #:log info "$CFdomain resolved to: $resolvedIP"
    #:log info "Proxied: $CFproxied"
    :if ($resolvedIP = $wanIP and $CFproxied = $proxied) \
    do={
        #log info "proxied DNS record matches WAN IP, no action needed"
        return
    }
    log warning "DNS record does NOT match WAN IP"
}
### updateDNS ###
:local cTimestamp ""
:if ($commentDateTime = true) \
do={
    :local cDate [/system clock get date]
    :local cTime [/system clock get time]
    :local cTimeZone [/system clock get time-zone-name]
    :set cTimestamp "$cDate $cTime $cTimeZone"
}
#:log info "DateTime $cTimestamp"
:local output [/tool fetch http-method=put mode=https url="https://api.cloudflare.com/client/v4/zones/$CFzoneid/dns_records/$CFdomainid" http-header-field="Authorization: Bearer $CFapitoken,content-type:application/json" as-value output=user http-data="{\"type\":\"A\",\"name\":\"$CFdomain\",\"content\":\"$wanIP\",\"ttl\":$TTL,\"proxied\":$proxied,\"comment\":\"$cTimestamp\"}"]
#:log info $output
:log warning "DNS record updated"